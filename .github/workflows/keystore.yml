name: PREVISION CI

on:
  pull_request:
    branches: [ main ]  # Trigger for PRs to main branch

env:
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  GOOGLE_MAPS_KEY: ${{ secrets.GOOGLE_MAPS_KEY }}
  ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  ANDROID_RELEASE_KEYSTORE: ${{ secrets.ANDROID_RELEASE_KEYSTORE }} 

jobs:
  android_build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Generate google-services.json
      env:
        GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      run: |
        echo "$GOOGLE_SERVICES_JSON" > google-services.json
        mkdir -p android/app/src  
        mv google-services.json android/app/src
    
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 18.x

    - name: Install dependencies
      run: npm install -g yarn

    - name: Install dependencies
      run: yarn install

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'oracle' 
        java-version: '17'
        
    - name: Run Jetify
      run: npx jetify

    - name: Cache Gradle Wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-
    - name: Make Gradlew Executable
      run: cd android && chmod +x ./gradlew

    - name: Generate release keystore
      run: |
        echo "$ANDROID_RELEASE_KEYSTORE" > release.keystore.asc
        gpg -d --passphrase "$ANDROID_KEYSTORE_PASSWORD" --batch release.keystore.asc > android/app/release.keystore
    
    - name: Clean Gradle build
      run: |
        cd android && ./gradlew clean

    - name: Build Android
      run: |
        cd android && ./gradlew bundleRelease
        ls app/build/outputs/bundle/release

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
          ruby-version: '2.7.4'

    - name: Upload AAB
      id: uploadArtifact
      uses: actions/upload-artifact@v1
      with:
          name: app
          path: app/build/outputs/bundle/release/app-release.aab


    - name: Deploy to Internal
      uses: r0adkll/upload-google-play@v1
      with:
          serviceAccountJson: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ secrets.APP_IDENTIFIER }}
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: beta
          whatsNewDirectory: whatsnew/
